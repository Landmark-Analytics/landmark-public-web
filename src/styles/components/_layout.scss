@use 'variables' as variables;
@use 'mixins' as mixins;

*,
*::before,
*::after {
  box-sizing: border-box;
}

::selection {
  color: variables.$theme-color-bg;
  background: variables.$theme-color-highlight;
}

html,
body {
  height: 100vh;
}

html {
  background: variables.$theme-color-light url('../img/lighthouse-bg-default.jpg') no-repeat 0 0;
  background-attachment: fixed;
  color: variables.$theme-color-text;
  font-family: variables.$font-family;
  overflow-y: scroll;
}

body {
  display: flex;
  flex-direction: column;
}

* {
  &:focus {
    outline: none;
  }

  &:focus-visible {
    outline: variables.$focus-outline-width solid variables.$focus-outline-color;
  }
}

a {
  color: variables.$link-color;
  text-decoration: none;

  &:hover {
    color: variables.$link-color-hover;
    text-decoration: underline;
  }
}

#header {
  background: variables.$header-color-bg;
  backdrop-filter: blur(variables.$header-bg-blur);
  box-shadow: variables.$header-shadow;
}

#main-content {
  background: variables.$main-color-bg;
  padding: variables.$main-padding;
  flex: 1; // expand to fill
  margin-top: calc(variables.$theme-bg-image-visible-height + variables.$computed-header-height);
}

#footer {
  background: variables.$main-color-bg;
  padding: variables.$footer-padding;
  font-size: variables.$footer-font-size;
  text-align: center;

  a {
    display: inline-block;
  }

  svg {
    fill: variables.$theme-color-text;
    vertical-align: bottom;
    width: 20px;
    height: 20px;
  }
}

@include mixins.breakpoint-up(variables.$grid-desktop-min-size) {
  // Desktop overrides

  html {
    background-image: url('../img/lighthouse-bg-desktop.jpg');
  }

  aside {
    display: none;
  }

  #main-content {
    margin-top: calc(
      variables.$theme-bg-image-visible-height-desktop + variables.$computed-header-height-desktop
    );
  }
}

@media (width >= 1920px) {
  // When the screen is wider than the large BG image, center the BG image
  html {
    background-position: center 0;
  }
}
